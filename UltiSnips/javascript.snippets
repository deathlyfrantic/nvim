snippet ifmain "if require.main === module" b
function $1() {
	$0
}

if (require.main === module) {
	${1:main}();
}
endsnippet

snippet console "require console" b
const console = require("console");
$0
endsnippet

snippet thisbind "this.func = this.func.bind(this);"
this.${1:${VISUAL:func}} = this.$1.bind(this);
$0
endsnippet

snippet reactcomponent "React component skeleton" b
import React, { Component } from "react";
import PropTypes from "prop-types";

class ${1:`!v expand('%:t:r')`} extends Component {
	constructor(props) {
		super(props);
		$2
	}

	render() {
		$0
	}
}

$1.defaultProps = {
	$3
};

$1.propTypes = {
	$4
};

export default $1;
endsnippet

snippet impcomp "import React and Component from react" b
import React, { Component } from "react";
$0
endsnippet

snippet actype "redux action type const" b
export const ${1:${VISUAL:ACTION_TYPE}} = "$1";
$0
endsnippet

snippet action "redux action function" b
export const ${1:action} = ($2) => {
	return {
		type: $3,
		payload: {
			$0
		}
	};
};
endsnippet

snippet roas "return Object.assign({}, state {" b
return Object.assign({}, state, {
	$0
});
endsnippet

snippet fl "`// @flow` pragma" b
// @flow
endsnippet
